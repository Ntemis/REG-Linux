diff --git a/sway/ipc-server.c b/sway/ipc-server.c
index b934bb5..bd723fc 100644
--- a/sway/ipc-server.c
+++ b/sway/ipc-server.c
@@ -138,7 +138,7 @@ struct sockaddr_un *ipc_user_sockaddr(void) {
 		dir = "/tmp";
 	}
 	if (path_size <= snprintf(ipc_sockaddr->sun_path, path_size,
-			"%s/sway-ipc.%u.%i.sock", dir, getuid(), getpid())) {
+			"%s/sway-ipc.%u.sock", dir, getuid())) {
 		sway_abort("Socket path won't fit into ipc_sockaddr->sun_path");
 	}
 
diff --git a/sway/main.c b/sway/main.c
index 165ccc0..70bad19 100644
--- a/sway/main.c
+++ b/sway/main.c
@@ -112,7 +112,8 @@ static void log_kernel(void) {
 }
 
 static bool detect_suid(void) {
-	if (geteuid() != 0 && getegid() != 0) {
+	if (geteuid() == 0 && getegid() == 0) {
+		sway_log(SWAY_INFO, "Running sway as root user");
 		return false;
 	}
 
@@ -266,11 +267,6 @@ int main(int argc, char **argv) {
 		}
 	}
 
-	// SUID operation is deprecated, so block it for now.
-	if (detect_suid()) {
-		exit(EXIT_FAILURE);
-	}
-
 	// Since wayland requires XDG_RUNTIME_DIR to be set, abort with just the
 	// clear error message (when not running as an IPC client).
 	if (!getenv("XDG_RUNTIME_DIR") && optind == argc) {
@@ -320,6 +316,11 @@ int main(int argc, char **argv) {
 		return 0;
 	}
 
+	// SUID operation is deprecated, so block it for now.
+	if (detect_suid()) {
+		exit(EXIT_FAILURE);
+	}
+	
 	increase_nofile_limit();
 
 	// handle SIGTERM signals
