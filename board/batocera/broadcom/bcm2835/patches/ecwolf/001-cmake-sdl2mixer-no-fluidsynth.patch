--- a/deps/SDL_mixer/CMakeLists.txt	2023-07-25 04:18:45.000000000 +0200
+++ b/deps/SDL_mixer/CMakeLists.txt	2024-05-28 03:09:28.297863083 +0200
@@ -247,7 +247,6 @@
     src/codecs/music_drflac.c
     src/codecs/music_drmp3.c
     src/codecs/music_flac.c
-    src/codecs/music_fluidsynth.c
     src/codecs/music_gme.c
     src/codecs/music_modplug.c
     src/codecs/music_mpg123.c
@@ -266,6 +265,13 @@
     src/music.c
     src/utils.c
 )
+
+if (FluidSynth_FOUND)
+add_library(SDL2_mixer
+    src/codecs/music_fluidsynth.c
+)
+endif()
+
 add_library(SDL2_mixer::${sdl2_mixer_export_name} ALIAS SDL2_mixer)
 target_include_directories(SDL2_mixer
     PUBLIC
--- a/deps/SDL_mixer/CMakeLists.txt	2024-05-28 03:19:29.224881189 +0200
+++ b/deps/SDL_mixer/CMakeLists.txt	2024-05-28 03:24:06.707180860 +0200
@@ -811,20 +811,13 @@
     endif()
 endif()
 
-if(SDL2MIXER_MIDI_FLUIDSYNTH)
-    target_compile_definitions(SDL2_mixer PRIVATE MUSIC_MID_FLUIDSYNTH)
-    # ECWolf: We want to dynamically load fluidsynth even if vendoring everything else
-    #if(SDL2MIXER_VENDORED)
-    #    message(STATUS "Using vendored FluidSynth")
-    #    message(FATAL_ERROR "FluidSynth is not vendored.")
-    #else()
+if(FluidSynth_FOUND)
+    if(SDL2MIXER_MIDI_FLUIDSYNTH)
+        target_compile_definitions(SDL2_mixer PRIVATE MUSIC_MID_FLUIDSYNTH)
         message(STATUS "Using system FluidSynth")
-        find_package(FluidSynth)
         if(NOT SDL2MIXER_MIDI_FLUIDSYNTH_SHARED)
             list(APPEND PC_REQUIRES fluidsynth)
         endif()
-    #endif()
-    if(FluidSynth_FOUND)
         if(SDL2MIXER_MIDI_FLUIDSYNTH_SHARED)
             target_include_directories(SDL2_mixer PRIVATE
                 $<TARGET_PROPERTY:FluidSynth::libfluidsynth,INCLUDE_DIRECTORIES>
@@ -836,9 +829,9 @@
             target_compile_definitions(SDL2_mixer PRIVATE "FLUIDSYNTH_DYNAMIC=\"${dynamic_fluidsynth}\"")
             if(SDL2MIXER_VENDORED)
                 add_dependencies(SDL2_mixer FluidSynth::libfluidsynth)
-             endif()
+            endif()
         else()
-             target_link_libraries(SDL2_mixer PRIVATE FluidSynth::libfluidsynth)
+            target_link_libraries(SDL2_mixer PRIVATE FluidSynth::libfluidsynth)
         endif()
     endif()
 endif()
