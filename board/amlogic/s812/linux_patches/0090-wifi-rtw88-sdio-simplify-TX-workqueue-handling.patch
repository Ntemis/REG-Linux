From 4dc7642ec27abf9a229fc4eee9d6858c21ad2101 Mon Sep 17 00:00:00 2001
From: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
Date: Thu, 19 Sep 2024 12:26:16 +0200
Subject: [PATCH 90/95] wifi: rtw88: sdio: simplify TX workqueue handling

Simplify the existing code to make it easier to read/understand. No
functional changes intended.

Signed-off-by: Martin Blumenstingl <martin.blumenstingl@googlemail.com>
---
 drivers/net/wireless/realtek/rtw88/sdio.c | 26 ++++++-----------------
 drivers/net/wireless/realtek/rtw88/sdio.h |  7 ++----
 2 files changed, 8 insertions(+), 25 deletions(-)

diff --git a/drivers/net/wireless/realtek/rtw88/sdio.c b/drivers/net/wireless/realtek/rtw88/sdio.c
index cc2d4fef3587..1cbf93ccdfda 100644
--- a/drivers/net/wireless/realtek/rtw88/sdio.c
+++ b/drivers/net/wireless/realtek/rtw88/sdio.c
@@ -671,6 +671,7 @@ static void rtw_sdio_init(struct rtw_dev *rtwdev)
 {
 	struct rtw_sdio *rtwsdio = (struct rtw_sdio *)rtwdev->priv;
 
+	rtwsdio->rtwdev = rtwdev;
 	rtwsdio->irq_mask = REG_SDIO_HIMR_RX_REQUEST | REG_SDIO_HIMR_CPWM1;
 }
 
@@ -809,7 +810,7 @@ static void rtw_sdio_tx_kick_off(struct rtw_dev *rtwdev)
 {
 	struct rtw_sdio *rtwsdio = (struct rtw_sdio *)rtwdev->priv;
 
-	queue_work(rtwsdio->txwq, &rtwsdio->tx_handler_data->work);
+	queue_work(rtwsdio->txwq, &rtwsdio->tx_work);
 }
 
 static void rtw_sdio_link_ps(struct rtw_dev *rtwdev, bool enter)
@@ -1241,15 +1242,10 @@ static void rtw_sdio_process_tx_queue(struct rtw_dev *rtwdev,
 
 static void rtw_sdio_tx_handler(struct work_struct *work)
 {
-	struct rtw_sdio_work_data *work_data =
-		container_of(work, struct rtw_sdio_work_data, work);
-	struct rtw_sdio *rtwsdio;
-	struct rtw_dev *rtwdev;
+	struct rtw_sdio *rtwsdio = container_of(work, struct rtw_sdio, tx_work);
+	struct rtw_dev *rtwdev = rtwsdio->rtwdev;
 	int limit, queue;
 
-	rtwdev = work_data->rtwdev;
-	rtwsdio = (struct rtw_sdio *)rtwdev->priv;
-
 	if (!rtw_fw_feature_check(&rtwdev->fw, FW_FEATURE_TX_WAKE))
 		rtw_sdio_deep_ps_leave(rtwdev);
 
@@ -1282,21 +1278,12 @@ static int rtw_sdio_init_tx(struct rtw_dev *rtwdev)
 		return -ENOMEM;
 	}
 
-	for (i = 0; i < RTK_MAX_TX_QUEUE_NUM; i++)
+	for (i = 0; i < ARRAY_SIZE(rtwsdio->tx_queue); i++)
 		skb_queue_head_init(&rtwsdio->tx_queue[i]);
-	rtwsdio->tx_handler_data = kmalloc(sizeof(*rtwsdio->tx_handler_data),
-					   GFP_KERNEL);
-	if (!rtwsdio->tx_handler_data)
-		goto err_destroy_wq;
 
-	rtwsdio->tx_handler_data->rtwdev = rtwdev;
-	INIT_WORK(&rtwsdio->tx_handler_data->work, rtw_sdio_tx_handler);
+	INIT_WORK(&rtwsdio->tx_work, rtw_sdio_tx_handler);
 
 	return 0;
-
-err_destroy_wq:
-	destroy_workqueue(rtwsdio->txwq);
-	return -ENOMEM;
 }
 
 static void rtw_sdio_deinit_tx(struct rtw_dev *rtwdev)
@@ -1305,7 +1292,6 @@ static void rtw_sdio_deinit_tx(struct rtw_dev *rtwdev)
 	int i;
 
 	destroy_workqueue(rtwsdio->txwq);
-	kfree(rtwsdio->tx_handler_data);
 
 	for (i = 0; i < RTK_MAX_TX_QUEUE_NUM; i++)
 		ieee80211_purge_tx_queue(rtwdev->hw, &rtwsdio->tx_queue[i]);
diff --git a/drivers/net/wireless/realtek/rtw88/sdio.h b/drivers/net/wireless/realtek/rtw88/sdio.h
index 3c659ed180f0..fe114e3fd44e 100644
--- a/drivers/net/wireless/realtek/rtw88/sdio.h
+++ b/drivers/net/wireless/realtek/rtw88/sdio.h
@@ -142,12 +142,9 @@ struct rtw_sdio_tx_data {
 	u8 sn;
 };
 
-struct rtw_sdio_work_data {
-	struct work_struct work;
+struct rtw_sdio {
 	struct rtw_dev *rtwdev;
-};
 
-struct rtw_sdio {
 	struct sdio_func *sdio_func;
 
 	u32 irq_mask;
@@ -157,7 +154,7 @@ struct rtw_sdio {
 	void *irq_thread;
 
 	struct workqueue_struct *txwq;
-	struct rtw_sdio_work_data *tx_handler_data;
+	struct work_struct tx_work;
 	struct sk_buff_head tx_queue[RTK_MAX_TX_QUEUE_NUM];
 };
 
-- 
2.43.0

