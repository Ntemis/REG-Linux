diff --git a/package/llvm-project/llvm/llvm.mk b/package/llvm-project/llvm/llvm.mk
index b0515474d8..b47aa8c070 100644
--- a/package/llvm-project/llvm/llvm.mk
+++ b/package/llvm-project/llvm/llvm.mk
@@ -5,6 +5,9 @@
 ################################################################################
 
 LLVM_VERSION = $(LLVM_PROJECT_VERSION)
+
+ifeq ($(BR2_PACKAGE_LLVM_BUILD_FROM_SOURCE),y)
+
 LLVM_SITE = $(LLVM_PROJECT_SITE)
 LLVM_SOURCE = llvm-$(LLVM_VERSION).src.tar.xz
 LLVM_LICENSE = Apache-2.0 with exceptions
@@ -18,7 +21,10 @@ LLVM_DEPENDENCIES = host-llvm
 
 # Path to cmake modules from host-llvm-cmake
 HOST_LLVM_CONF_OPTS += -DCMAKE_MODULE_PATH=$(HOST_DIR)/lib/cmake/llvm
+# batocera add LLVM_COMMON_CMAKE_UTILS
+HOST_LLVM_CONF_OPTS += -DLLVM_COMMON_CMAKE_UTILS=$(HOST_DIR)/lib/cmake/llvm
 LLVM_CONF_OPTS += -DCMAKE_MODULE_PATH=$(HOST_DIR)/lib/cmake/llvm
+LLVM_CONF_OPTS += -DLLVM_COMMON_CMAKE_UTILS=$(HOST_DIR)/lib/cmake/llvm
 
 # Don't build clang libcxx libcxxabi lldb compiler-rt lld polly as llvm subprojects
 # This flag assumes that projects are checked out side-by-side and not nested
@@ -315,3 +321,91 @@ LLVM_POST_INSTALL_TARGET_HOOKS = LLVM_DELETE_LLVM_TBLGEN_TARGET
 
 $(eval $(cmake-package))
 $(eval $(host-cmake-package))
+
+else
+
+# Download pre compiled files
+REGLINUX_LLVM_CPU = unknown
+ifeq ($(BR2_arm1176jzf_s),y)
+	REGLINUX_LLVM_CPU = arm1176jzf_s
+else ifeq ($(BR2_cortex_a7),y)
+	REGLINUX_LLVM_CPU = cortex_a7
+else ifeq ($(BR2_cortex_a9),y)
+	REGLINUX_LLVM_CPU = cortex_a9
+else ifeq ($(BR2_cortex_a15_a7),y)
+	REGLINUX_LLVM_CPU = cortex_a15_a7
+else ifeq ($(BR2_cortex_a17),y)
+	REGLINUX_LLVM_CPU = cortex_a17
+else ifeq ($(BR2_cortex_a35),y)
+	REGLINUX_LLVM_CPU = cortex_a35
+else ifeq ($(BR2_cortex_a53),y)
+	REGLINUX_LLVM_CPU = cortex_a53
+else ifeq ($(BR2_jz4770),y)
+	REGLINUX_LLVM_CPU = jz4770
+else ifeq ($(BR2_cortex_a55),y)
+	REGLINUX_LLVM_CPU = cortex_a55
+else ifeq ($(BR2_cortex_a72),y)
+	REGLINUX_LLVM_CPU = cortex_a72
+else ifeq ($(BR2_cortex_a72_a53),y)
+	REGLINUX_LLVM_CPU = cortex_a72_a53
+else ifeq ($(BR2_cortex_a73_a53),y)
+	REGLINUX_LLVM_CPU = cortex_a73_a53
+else ifeq ($(BR2_cortex_a75_a55),y)
+	REGLINUX_LLVM_CPU = cortex_a75_a55
+else ifeq ($(BR2_cortex_a76),y)
+	REGLINUX_LLVM_CPU = cortex_a76
+else ifeq ($(BR2_cortex_a76_a55),y)
+	REGLINUX_LLVM_CPU = cortex_a76_a55
+else ifeq ($(BR2_ARM_CPU_ARMV9A),y) # TODO
+	REGLINUX_LLVM_CPU = cortex_a76_a55
+else ifeq ($(BR2_riscv),y)
+	REGLINUX_LLVM_CPU = riscv
+else ifeq ($(BR2_saphira),y)
+	REGLINUX_LLVM_CPU = saphira
+else ifeq ($(BR2_x86_64),y)
+	REGLINUX_LLVM_CPU = x86_64
+else ifeq ($(BR2_x86_64_v3),y)
+	REGLINUX_LLVM_CPU = x86_64_v3
+endif
+
+LLVM_SITE = https://github.com/REG-Linux/REG-llvm-binaries/releases/download/$(LLVM_VERSION)
+LLVM_SOURCE = reglinux-llvm-$(LLVM_VERSION)-$(REGLINUX_LLVM_CPU).tar.xz
+HOST_LLVM_DEPENDENCIES = host-python3
+
+define RENAME_LLVM_HASH_IF_NOT_BUILD_FROM_SOURCE
+	mv $(BR2_EXTERNAL)/buildroot/package/llvm-project/llvm/llvm.hash $(BR2_EXTERNAL)/buildroot/package/llvm-project/llvm/llvm.hash.bak || :
+endef
+
+define RESTORE_LLVM_HASH_IF_NOT_BUILD_FROM_SOURCE
+	mv $(BR2_EXTERNAL)/buildroot/package/llvm-project/llvm/llvm.hash.bak $(BR2_EXTERNAL)/buildroot/package/llvm-project/llvm/llvm.hash || :
+endef
+
+define DISABLE_LLVM_PATCHES_IF_NOT_BUILD_FROM_SOURCE
+	$(foreach dir,$(call pkg-patches-dirs,$(PKG)),\
+		mkdir -p $(dir)/tmp_disabled_patches ; mv -v $(dir)/*.patch $(dir)/tmp_disabled_patches/ ; \
+	)
+endef
+
+define ENABLE_LLVM_PATCHES_IF_NOT_BUILD_FROM_SOURCE
+	$(foreach dir,$(call pkg-patches-dirs,$(PKG)),\
+		mv -v $(dir)/tmp_disabled_patches/* $(dir)/ ; rmdir $(dir)/tmp_disabled_patches ; \
+	)
+endef
+
+LLVM_PRE_DOWNLOAD_HOOKS += RENAME_LLVM_HASH_IF_NOT_BUILD_FROM_SOURCE
+LLVM_POST_DOWNLOAD_HOOKS += RESTORE_LLVM_HASH_IF_NOT_BUILD_FROM_SOURCE
+LLVM_PRE_PATCH_HOOKS += DISABLE_LLVM_PATCHES_IF_NOT_BUILD_FROM_SOURCE
+LLVM_POST_PATCH_HOOKS += ENABLE_LLVM_PATCHES_IF_NOT_BUILD_FROM_SOURCE
+
+define LLVM_EXTRACT_CMDS
+	# extract host folder
+	tar -C $(HOST_DIR)/../ -xvf $(DL_DIR)/$(LLVM_DL_SUBDIR)/$(LLVM_SOURCE) host
+endef
+
+define LLVM_INSTALL_TARGET_CMDS
+	# extract target folder
+	tar -C $(TARGET_DIR)/../ -xvf $(DL_DIR)/$(LLVM_DL_SUBDIR)/$(LLVM_SOURCE) target
+endef
+
+$(eval $(generic-package))
+endif
