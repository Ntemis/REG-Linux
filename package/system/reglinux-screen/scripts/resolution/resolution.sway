#!/bin/bash

f_minTomaxResolution() {
    # minimize resolution because of 4K tv
    MWIDTH=$(echo "$1"x | tr -d [[:blank:]] | cut -dx -f1) # the final added x is for compatibility with v29
    MHEIGHT=$(echo "$1"x | tr -d [[:blank:]] | cut -dx -f2)
    if test -n "$MWIDTH" -a -n "$MHEIGHT" -a "$MWIDTH" != 0 -a "$MHEIGHT" != 0; then
        MAXWIDTH="$MWIDTH"
        MAXHEIGHT="$MHEIGHT"
    else
        MAXWIDTH=1920
        MAXHEIGHT=1080
    fi
    CURRENT_RESOLUTION=$(swaymsg -t get_outputs | jq -r '.[] | select (.focused).current_mode | "\(.width)x\(.height)"')
    CURRENTWIDTH=$(echo "${CURRENT_RESOLUTION}" | cut -d x -f 1)
    CURRENTHEIGHT=$(echo "${CURRENT_RESOLUTION}" | cut -d x -f 2)

    if test "${CURRENTWIDTH}" -le "${MAXWIDTH}" -a "${CURRENTHEIGHT}" -le "${MAXHEIGHT}"; then
        exit 0
    fi

    # select a new one
    # select the first one valid
    # is it the best ? or should we loop to search the first with the same ratio ?
    swaymsg -t get_outputs | jq -r '.[] | select (.focused).modes[] | "\(.width)x\(.height)"' |
        while read SUGGRESOLUTIONRATE SUGGMODE; do
            SUGGRESOLUTION=$(echo "${SUGGRESOLUTIONRATE}" | cut -d . -f 1)
            SUGGWIDTH=$(echo "${SUGGRESOLUTION}" | cut -d x -f 1)
            SUGGHEIGHT=$(echo "${SUGGRESOLUTION}" | cut -d x -f 2)
            if test "${SUGGWIDTH}" -le "${MAXWIDTH}" -a "${SUGGHEIGHT}" -le "${MAXHEIGHT}"; then
                OUTPUT=$(swaymsg -t get_outputs | jq -r '.[] | select (.focused).name')
                swaymsg output "${OUTPUT}" mode "${SUGGRESOLUTION}"
                exit 0
            fi
        done
}

listModes() {
    echo "max-1920x1080:maximum 1920x1080"
    echo "max-640x480:maximum 640x480"
    swaymsg -t get_outputs | jq -r '.[] | select (.focused).modes[] | "\(.width)x\(.height).\(.refresh):\(.width)x\(.height) \(.refresh / 1000) Hz"' | uniq
}

listOutputs() {
    swaymsg -t get_outputs | jq -r '.[].name'
}

currentMode() {
    swaymsg -t get_outputs | jq -r '.[] | select (.focused).current_mode | "\(.width)x\(.height).\(.refresh)"'
}

currentOutput() {
    swaymsg -t get_outputs | jq -r '.[] | select (.focused).name'
}

currentResolution() {
    swaymsg -t get_outputs | jq -r '.[] | select (.focused).current_mode | "\(.width)x\(.height)"'
}

setMode() {
    MODE=$1
    if echo "${MODE}" | grep -qE 'max-'; then # special max-widthxheight
        SPMODE=$(echo "${MODE}" | sed -e s+"^max-"++)
        f_minTomaxResolution "${SPMODE}"
    else # normal mode
        OUTPUT=$(swaymsg -t get_outputs | jq -r '.[] | select (.focused).name')

        # let the old format widthxheight and the new one widthxheight.hz
        if echo "${MODE}" | grep "\."; then
            PARTRES=$(echo "${MODE}" | cut -d'.' -f1)
            PARTHZ=$(echo "${MODE}" | cut -d'.' -f2- | awk '{ printf "%.3f", $0 / 1000 }')
            swaymsg output "${OUTPUT}" mode "${PARTRES}"@"${PARTHZ}"Hz
        else
            swaymsg output "${OUTPUT}" mode "${MODE}"
        fi
    fi
}

setOutput() {
    MODE=$1
    if swaymsg -t get_outputs | jq -r '.[].name' | grep -qE "^${MODE}$"; then
        # enable (in case of reboot of es)
        echo "set ${MODE} as primary" >&2
        swaymsg output "${MODE}" enable

        # disable all other outputs
        swaymsg -t get_outputs | jq -r '.[].name' | grep -vE "^${MODE}$" |
            while read OUTP; do
                echo "set ${OUTP} off" >&2
                swaymsg output "${OUTP}" disable
            done
    else
        # disable all except the first one
        swaymsg -t get_outputs | jq -r '.[].name' |
            (
                read FIRSTOUTPUT
                while read OUTP; do
                    echo "set ${OUTP} off" >&2
                    swaymsg output "${OUTP}" disable
                done

                # enable (in case of reboot of es)
                echo "set ${FIRSTOUTPUT} as primary" >&2
                swaymsg output "${FIRSTOUTPUT}" enable
            )
    fi
}

setRotation() {
    ROTATE=$1
    OUTPUT=$(swaymsg -t get_outputs | jq -r '.[] | select (.focused).name')

    case "${ROTATE}" in
    "1")
        swaymsg output "${OUTPUT}" transform 90
        ;;
    "2")
        swaymsg output "${OUTPUT}" transform 180
        ;;
    "3")
        swaymsg output "${OUTPUT}" transform 270
        ;;
    *)
        # in case of reboot of es
        swaymsg output "${OUTPUT}" transform normal
        ;;
    esac
}

getDisplayMode() {
    echo "wayland"
}

getRefreshRate() {
    swaymsg -t get_outputs | jq -r '.[] | select (.focused).modes[] | "\(.refresh / 1000)"' | uniq
}

mapTouchScreen() {
    # Mapping touch screen
    TOUCHSCREEN=$(swaymsg -t get_inputs | jq -r '.[] | select(.type == "touch") | .identifier')
    if [ -n "${TOUCHSCREEN}" ]; then
        OUTPUT=$(swaymsg -t get_outputs | jq -r '.[] | select (.focused).name')
        swaymsg input "${TOUCHSCREEN}" map_to_output "${OUTPUT}"
    fi
}

minTomaxResolution() {
    f_minTomaxResolution "$1"
}

supportSystemRotation() {
    exit 0
}
