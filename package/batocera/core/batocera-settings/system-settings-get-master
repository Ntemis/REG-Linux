#!/bin/bash

# this script can be used to get values that can have a default value by board

KEY=
CONFFILE=
SYSCONFFILE="/usr/share/reglinux/sysconfigs/system.conf"

while [ $# -ne 0 ]
do
    case "${1}" in
    "-f")
        shift
        CONFFILE="${1}"
        shift
        ;;
    *)
        KEY="${1}"
        shift
    esac
done

# prefer the user value
if [ -n "${CONFFILE}" ]; then
    VALUE="$(/usr/bin/system-settings-get -f "${CONFFILE}" "${KEY}" 2>/dev/null)"
else
    VALUE="$(/usr/bin/system-settings-get "${KEY}" 2>/dev/null)"
fi
# when value is auto, ignore
if [ -n "${VALUE}" ] && [ "${VALUE}" != "auto" ]; then
    echo "${VALUE}"
    exit 0
fi

BOARD_MODEL=$(tr -d '\0' </sys/firmware/devicetree/base/model 2>/dev/null)
[ -z "${BOARD_MODEL}" ] && BOARD_MODEL=$(tr -d '\0' </sys/devices/virtual/dmi/id/product_name 2>/dev/null)
# 3rd time lucky
if [ -z "${BOARD_MODEL}" ] || [ "${BOARD_MODEL}" = "Default string" ]; then
    BOARD_MODEL=$(tr -d '\0' </sys/devices/virtual/dmi/id/board_name 2>/dev/null)
fi

# prefer the board value
VALUE="$(/usr/bin/system-settings-get -f "${SYSCONFFILE}.${BOARD_MODEL//[^[:alnum:]]/_}" "${KEY}" 2>/dev/null)"
# when value is auto, ignore
if [ -n "${VALUE}" ] && [ "${VALUE}" != "auto" ]; then
    echo "${VALUE}"
    exit 0
fi

# fall back to the general value
/usr/bin/system-settings-get -f "${SYSCONFFILE}" "${KEY}" 2>/dev/null && exit 0

exit 1
