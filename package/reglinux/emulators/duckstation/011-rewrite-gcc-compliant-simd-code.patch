--- a/src/common/gsvector_neon.h	2024-07-14 10:58:01.490474883 +0200
+++ b/src/common/gsvector_neon.h	2024-07-14 12:48:39.479873540 +0200
@@ -778,7 +779,7 @@
 
   ALWAYS_INLINE int mask() const
   {
-    const uint32x2_t masks = vshr_n_u32(vreinterpret_u32_s32(v2s), 31);
+    const uint32x2_t masks = vshr_n_u32(vreinterpret_u32_s32(vreinterpret_s32_f32(v2s)), 31);
     return (vget_lane_u32(masks, 0) | (vget_lane_u32(masks, 1) << 1));
   }
 
@@ -2407,6 +2407,9 @@
     u32 U32[4];
     u64 U64[2];
     float32x4_t v4s;
+#ifdef CPU_ARCH_ARM64
+    float64x2_t v2d;
+#endif
   };
 
   GSVector4() = default;
@@ -2447,6 +2448,9 @@
   ALWAYS_INLINE explicit GSVector4(const GSVector2i& v) { v4s = vcombine_f32(vcvt_f32_s32(v.v2s), vcreate_f32(0)); }
 
   ALWAYS_INLINE constexpr explicit GSVector4(float32x4_t m) : v4s(m) {}
+#ifdef CPU_ARCH_ARM64
+  ALWAYS_INLINE constexpr explicit GSVector4(float64x2_t m) : v2d(m) {}
+#endif
 
   ALWAYS_INLINE explicit GSVector4(float f) { v4s = vdupq_n_f32(f); }
 
