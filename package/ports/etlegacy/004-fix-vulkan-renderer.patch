--- a/src/renderer_vk/tr_init.c	2024-11-11 22:36:45.000000000 +0100
+++ b/src/renderer_vk/tr_init.c	2024-11-13 12:05:53.364318883 +0100
@@ -254,25 +254,25 @@
 	switch (err)
 	{
 	case GL_INVALID_ENUM:
-		s = "GL_INVALID_ENUM";
+		strcpy(s, "GL_INVALID_ENUM");
 		break;
 	case GL_INVALID_VALUE:
-		s = "GL_INVALID_VALUE";
+		strcpy(s, "GL_INVALID_VALUE");
 		break;
 	case GL_INVALID_OPERATION:
-		s = "GL_INVALID_OPERATION";
+		strcpy(s, "GL_INVALID_OPERATION");
 		break;
 	case GL_STACK_OVERFLOW:
-		s = "GL_STACK_OVERFLOW";
+		strcpy(s, "GL_STACK_OVERFLOW");
 		break;
 	case GL_STACK_UNDERFLOW:
-		s = "GL_STACK_UNDERFLOW";
+		strcpy(s, "GL_STACK_UNDERFLOW");
 		break;
 	case GL_OUT_OF_MEMORY:
-		s = "GL_OUT_OF_MEMORY";
+		strcpy(s, "GL_OUT_OF_MEMORY");
 		break;
 	default:
-		s = "";
+		strcpy(s, "");
 		break;
 	}
 
--- a/src/renderer_vk/tr_init.c	2025-01-25 11:39:22.065126832 +0100
+++ b/src/renderer_vk/tr_init.c	2025-01-25 11:48:56.983361676 +0100
@@ -205,7 +205,7 @@
 
 		ri.GLimp_Init(&glConfig, glConfigString);
 
-		Q_strncpyz(renderer_buffer, glConfig.renderer_string, renderer_buffer);
+		Q_strncpyz(renderer_buffer, glConfig.renderer_string, sizeof(renderer_buffer));
 		Q_strlwr(renderer_buffer);
 
 		// OpenGL driver constants
