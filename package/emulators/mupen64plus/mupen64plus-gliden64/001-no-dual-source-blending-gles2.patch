--- a/src/Graphics/OpenGLContext/opengl_GLInfo.cpp	2025-01-25 12:28:20.000000000 +0100
+++ b/src/Graphics/OpenGLContext/opengl_GLInfo.cpp	2025-03-05 01:09:47.694766118 +0100
@@ -193,7 +193,17 @@
 	eglImage = (Utils::isEGLExtensionSupported("EGL_KHR_image_base") || Utils::isEGLExtensionSupported("EGL_KHR_image"));
 	ext_fetch_arm =  Utils::isExtensionSupported(*this, "GL_ARM_shader_framebuffer_fetch") && !ext_fetch;
 
-	dual_source_blending = !isGLESX || (Utils::isExtensionSupported(*this, "GL_EXT_blend_func_extended") && !isAnyAdreno);
+	if (Utils::isExtensionSupported(*this, "GL_EXT_blend_func_extended")) {
+		LOG(LOG_WARNING, "GL_EXT_blend_func_extended is supported");
+		if (majorVersion >= 3) {
+			LOG(LOG_WARNING, "%s major version: %d", isGLESX ? "OpenGL ES" : "OpenGL", majorVersion);
+			LOG(LOG_WARNING, "%s minor version: %d", isGLESX ? "OpenGL ES" : "OpenGL", minorVersion);
+		} else {
+			LOG(LOG_WARNING, "GL extensions:");
+			LOG(LOG_WARNING, (const char *)glGetString(GL_EXTENSIONS));
+		}
+	}
+	dual_source_blending = !isGLESX || ((!isGLES2) && (Utils::isExtensionSupported(*this, "GL_EXT_blend_func_extended") && !isAnyAdreno));
 	anisotropic_filtering = Utils::isExtensionSupported(*this, "GL_EXT_texture_filter_anisotropic");
 
 #ifdef OS_ANDROID
